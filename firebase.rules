rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isActiveMember() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.membershipActive == true &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.membershipExpiry > request.time;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAdmin() || (request.auth.uid == userId && 
        (!request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['role', 'membershipActive', 'membershipExpiry'])));
    }

    // Posts collection
    match /posts/{postId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
      
      // Comments subcollection
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isActiveMember();
        allow update, delete: if request.auth.uid == resource.data.userId || isAdmin();
      }
      
      // Likes subcollection
      match /likes/{likeId} {
        allow read: if true;
        allow create, delete: if isActiveMember() && request.auth.uid == likeId;
      }
    }

    // Events collection
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
      
      // Attendees subcollection
      match /attendees/{attendeeId} {
        allow read: if true;
        allow create, delete: if isActiveMember() && request.auth.uid == attendeeId;
      }
    }

    // Projects collection
    match /projects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Announcements collection
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // MembershipPayments collection
    match /membershipPayments/{paymentId} {
      allow read: if isAuthenticated() && 
        (request.auth.uid == resource.data.userId || isAdmin());
      allow create, update: if isAdmin();
    }

    // Content collection (for editable website content)
    match /content/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Gallery collection
    match /gallery/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}